"""
Задача 4.
Создайте обычный словарь и упорядоченный словарь OrderedDict.

Выполните операции, равные по смыслу, с каждым из словарей и сделайте замеры.
Опишите полученные результаты, сделайте выводы

И есть ли смысл исп-ть OrderedDict в Python 3.6 и более поздних версиях
"""
from collections import OrderedDict
from timeit import timeit

dict_1 = {'a': 1, 'b': 2, 'c': 3}
dict_2 = OrderedDict([('a', 1), ('b', 2), ('c', 3)])


def dict1(d1):
    d1['d'] = 4
    return d1


def dict2(d2):
    d2['d'] = 4
    return d2


print('Время добавления items в dict_1 при 10 повторениях: ',
      timeit('dict1(dict_1)', globals=globals(), number=10))
print('Время добавления items в dict_2 при 10 повторениях: ',
      timeit('dict2(dict_2)', globals=globals(), number=10))

"""
При выполнении операций над обычным словарем и OrderedDict первый работает быстрее.
Начиная с версии Python 3.6 обычный словарь начинает поддерживать запоминание порядка пар ключ-значение.
В настоящее время использование OrderedDict крайне редко, тк из полезный функций осталось - это возможность 
оперативного переупорядочивания элементов при помощи методов .popitem() и .move_to_end()
"""